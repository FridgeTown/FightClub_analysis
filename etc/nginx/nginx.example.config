server {
    server_name ${DOMAIN};

    root /home/ubuntu/dist;
    index index.html;

    location / {
        try_files $uri $uri/ /index.html;

        add_header Access-Control-Allow-Origin *;
        add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
        add_header Access-Control-Allow-Headers "Authorization, Content-Type";
    }

    location /api/ {
        proxy_pass http://127.0.0.1:${APP_PORT};
        
        proxy_http_version 1.1; # HTTP/1.1 필수
        proxy_set_header Connection ''; # keep-alive 유지
        chunked_transfer_encoding on; # 청크 전송 활성화
        proxy_buffering off; # 버퍼링 비활성화
        proxy_cache off; # 캐싱 비활성화
	
	      proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        add_header Access-Control-Allow-Origin "*";
        add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
        add_header Access-Control-Allow-Headers "Authorization, Content-Type";
      }

    location /static/ {
        alias /home/ubuntu/dist/static/;
        expires max;
        add_header Cache-Control "public";
    }

    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/${DOMAIN}/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/${DOMAIN}/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}


server {
    if ($host = ${DOMAIN}) {
        return 301 https://$host$request_uri;
    } # managed by Certbot

    listen 80;
    server_name ${DOMAIN};
    return 404; # managed by Certbot
}